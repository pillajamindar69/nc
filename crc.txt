#include <stdio.h>
#include <string.h>

void senddata(char receiver[], char divisor[]) {
    int dataLen = strlen(receiver);
    int divisorLen = strlen(divisor);
    char checkeddata[50];
    strcpy(checkeddata, receiver); 

    for (int i = 0; i <= dataLen - divisorLen; i++) {
        if (checkeddata[i] == '1') { 
            for (int j = 0; j < divisorLen; j++) {
                checkeddata[i + j] = checkeddata[i + j] == divisor[j] ? '0' : '1';
            }
        }
    }

    checkeddata[dataLen] = '\0'; 
    printf("Checked Data: %s\n", checkeddata);

   
    for (int i = dataLen - divisorLen + 1; i < dataLen; i++) {
        if (checkeddata[i] != '0') {
            printf("Error in transmission!\n");
            return;
        }
    }
    printf("Transmission is error-free!\n");
}


void computeCRC(char data[], char divisor[], char remainder[], char receiver[]) {
    int dataLen = strlen(data);
    int divisorLen = strlen(divisor);

    printf("Data sent by sender: %s\n", data);

    strcpy(receiver, data); 
    for (int i = 0; i <= dataLen - divisorLen; i++) {
        if (receiver[i] == '1') { 
            for (int j = 0; j < divisorLen; j++) {
                receiver[i + j] = receiver[i + j] == divisor[j] ? '0' : '1';
            }
        }
    }

  
    int j = 0;
    for (int i = dataLen - divisorLen + 1; i < dataLen; i++) {
        remainder[j++] = receiver[i];
    }
    remainder[j] = '\0'; 
    printf("Remainder: %s\n", remainder);
}

int main() {
    char data[50], divisor[30], remainder[30], receiver[50];
    printf("Enter the data: ");
    scanf("%s", data);
    printf("Enter the divisor: ");
    scanf("%s", divisor);

    char paddedData[100];
    strcpy(paddedData, data);

  
    int dataLen = strlen(data);
    int divisorLen = strlen(divisor);
    for (int i = 0; i < divisorLen - 1; i++) {
        strcat(paddedData, "0");
    }

    
    computeCRC(paddedData, divisor, remainder, receiver);

  
    strcat(data, remainder);
    printf("Transmitted Data (Data + CRC): %s\n", data);

 
    senddata(data, divisor);

    return 0;
}